# Docker Compose file version
version: "3.8"

# Service definitions
services:
  # Spring application service
  spring-app:
    container_name: spring-app
    image: spring-app
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - spring-mysql-network
    environment:
      # Spring application environment variables for MySQL connection
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/certificatetracker
      - spring.datasource.username=devops
      - spring.datasource.password=devops
    depends_on:
      - mysqldb
    volumes:
      # Mount the local .m2 directory to /root/.m2 inside the container
      - .m2:/root/.m2

  # MySQL database service
  mysqldb:
    container_name: mysqldb
    image: mysql:8.0
    restart: always
    ports:
      - 3307:3306
    volumes:
      # Mount MySQL data volume and initialization scripts
      - mysql-data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d/
    networks:
      - spring-mysql-network
    environment:
      # MySQL database environment variables
      MYSQL_DATABASE: certificatetracker
      MYSQL_USER: devops
      MYSQL_PASSWORD: devops
      MYSQL_ROOT_PASSWORD: devops

# Network definition
networks:
  spring-mysql-network:
    name: spring-mysql-network

# Volume definition
volumes:
  # Named volume for MySQL data
  mysql-data:
    name: mysql-data
